#!/bin/bash
#
# /etc/init.d/storm-logviewer
#
# Startup script for storm-nimbus
#
# chkconfig: 2345 20 80
# description: Starts and stops storm-logviewer

if [ -f /etc/profile.d/java.sh ]; then
        . /etc/profile.d/java.sh
        [ -z "$JAVA_HOME" ] && echo "JAVA_HOME is not defined" && exit 1
else
	echo "enviroment not properly set up"
        exit 1
fi

. /etc/init.d/functions
stormBin=/usr/bin/storm
stormSvc=$(echo $0 | cut -d'-' -f2)
desc="Storm $stormSvc daemon"
outFile="/var/log/storm/storm-$stormSvc.out"

if ! [ -f $stormBin ]; then
  echo "storm binary not found."
  exit 5
fi

if [ -f /etc/default/storm ]; then
  . /etc/default/storm
fi

if [ -f /etc/sysconfig/storm ]; then
  . /etc/sysconfig/storm
fi

start() {
  echo "Starting $desc (storm-$stormSvc): "
  su -s /bin/bash $stormUser -c "nohup storm $stormSvc >>$outFile 2>&1 &"
  RETVAL=$?
  return $RETVAL
}

stop() {
  echo "Shutting down $desc (storm-$stormSvc): "
  if [ $stormSvc == "ui" ]; then
    pkill -f backtype.storm.ui.core
  else
    pkill -f backtype.storm.daemon.$stormSvc
  fi
  # Kill any storm processes that are currently starting
  pkill -f "/usr/bin/python /usr/bin/storm $stormSvc"
}

restart() {
    stop
    start
}

status() {
  if [ $stormSvc == "ui" ]; then
     pid=$(pgrep -f backtype.storm.ui.core)
  else
     pid=$(pgrep -f backtype.storm.daemon.$stormSvc)
  fi

  # check if storm is in the process of starting
  if [ -z $pid ]; then
     pid=$(pgrep -f "/usr/bin/python /usr/bin/storm $stormSvc")
  fi

  if [ -z $pid ]; then
    echo "storm-$stormSvc is NOT running."
    return 1
  else
    echo "storm-$stormSvc is running (pid is $pid)."
  fi

}

case "$1" in
  start)   start;;
  stop)    stop;;
  restart) restart;;
  status)  status;;
  *)       echo "Usage: $0 {start|stop|restart}"
           RETVAL=2;;
esac
exit $RETVAL
